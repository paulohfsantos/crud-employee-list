[{"C:\\Users\\paulo\\Documents\\Projetos\\CRUD\\client\\src\\index.js":"1","C:\\Users\\paulo\\Documents\\Projetos\\CRUD\\client\\src\\App.js":"2","C:\\Users\\paulo\\Documents\\Projetos\\CRUD\\client\\src\\Components\\Inputs.js":"3"},{"size":203,"mtime":1611807400278,"results":"4","hashOfConfig":"5"},{"size":191,"mtime":1611808211726,"results":"6","hashOfConfig":"5"},{"size":5766,"mtime":1612499030289,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"yk2734",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\paulo\\Documents\\Projetos\\CRUD\\client\\src\\index.js",[],["16","17"],"C:\\Users\\paulo\\Documents\\Projetos\\CRUD\\client\\src\\App.js",[],"C:\\Users\\paulo\\Documents\\Projetos\\CRUD\\client\\src\\Components\\Inputs.js",["18","19"],"import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport '../style/Inputs.css'\r\n\r\nfunction Inputs() {\r\n\r\n    const [name, setName] = useState('')\r\n    const [age, setAge] = useState(0)\r\n    const [country, setCountry] = useState('')\r\n    const [position, setPosition] = useState('')\r\n    const [wage, setWage] = useState(0)\r\n\r\n    //CRUD - update\r\n    const [newWage, setNewWage] = useState(0)\r\n\r\n    const [employeeList, setEmployeeList] = useState([])\r\n\r\n    const addEmployee = () => {\r\n        axios.post('http://localhost:3001/Create', {\r\n            //key: value\r\n            name: name,\r\n            age: age,\r\n            country: country,\r\n            position: position,\r\n            wage: wage\r\n        }).then(()=>{\r\n            console.log('success!')\r\n            setName('')\r\n            setAge('')\r\n            setCountry('')\r\n            setPosition('')\r\n            setWage('')\r\n            setEmployeeList([\r\n                ...employeeList,\r\n                {\r\n                    name: name,\r\n                    age: age,\r\n                    country: country,\r\n                    position: position,\r\n                    wage: wage\r\n                }\r\n            ])\r\n            console.log(name)\r\n        })\r\n    }\r\n\r\n    const getEmployees = () => {\r\n        axios.get('http://localhost:3001/Employees').then((response)=>{\r\n            console.log(response)\r\n            setEmployeeList(response.data)\r\n        })\r\n    }\r\n\r\n    const updateEmployeeWage = (id) => {\r\n        axios.put('http://localhost:3001/Update', { wage: newWage, id: id }).then(\r\n            (response)=>{\r\n            setEmployeeList(\r\n                employeeList.map((val)=>{\r\n                    return val.id == id ?\r\n                        {\r\n                            id: val.id,\r\n                            name: val.name,\r\n                            country: val.country,\r\n                            age: val.age,\r\n                            position: val.position,\r\n                            wage: newWage\r\n                        }\r\n                    : val\r\n                })\r\n            )\r\n        })\r\n    }\r\n\r\n    const deleteEmployee = (id) => {\r\n        axios.delete(`http://localhost:3001/Delete/${id}`).then((response)=>{\r\n            setEmployeeList(employeeList.filter((val)=>{\r\n                return val.id != id\r\n            }))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main\">\r\n                <h1>Become a Employee</h1>\r\n                \r\n                <label>Name:</label>\r\n                <input type=\"text\" value={name} onChange={(event) => {setName(event.target.value)}} />\r\n\r\n                <label>Age:</label>\r\n                <input type=\"number\" value={age} onChange={(event) => {setAge(event.target.value)}} />\r\n\r\n                <label>country:</label>\r\n                <input type=\"text\" value={country} onChange={(event) => {setCountry(event.target.value)}} />\r\n\r\n                <label>Position:</label>\r\n                <input type=\"text\" value={position} onChange={(event) => {setPosition(event.target.value)}} />\r\n\r\n                <label>Wage /year:</label>\r\n                <input type=\"number\" value={wage} onChange={(event) => {setWage(event.target.value)}} />\r\n\r\n                <button onClick={addEmployee}>Add Employee</button>\r\n            </div>\r\n            <hr />\r\n            <div className=\"main\">\r\n                <button onClick={getEmployees}>Get Employee</button>\r\n                <div className=\"list-emp\">\r\n                    <ul style={{textAlign: 'center'}}>\r\n                        {\r\n                            employeeList.map((val, key)=>{\r\n                                return(\r\n                                    <li key={key}>\r\n                                        <div className=\"employee-card\">\r\n                                            <div className=\"employee-name\">\r\n                                                Name: <span>{val.name}</span>\r\n                                            </div>\r\n                                            <div className=\"employee-age\">\r\n                                                Age: <span>{val.age} Years old</span>\r\n                                            </div>\r\n                                            <div className=\"employee-country\">\r\n                                                Country: <span>{val.country}</span>\r\n                                            </div>\r\n                                            <div className=\"employee-position\">\r\n                                                Position: <span>{val.position}</span>\r\n                                            </div>\r\n                                            <div className=\"employee-wage\">\r\n                                                Wage <em>per year:</em> <span style={{color: '#333'}}>{val.wage}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"update-box\">\r\n                                            <input type=\"text\" placeholder=\"Update Wage\" onChange={(event) => {setNewWage(event.target.value)}} />\r\n                                            <button onClick={()=>{updateEmployeeWage(val.id)}}>Update</button>\r\n                                            <button onClick={() =>{deleteEmployee(val.id)}}>Delete</button>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inputs",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":59,"column":35,"nodeType":"26","messageId":"27","endLine":59,"endColumn":37},{"ruleId":"24","severity":1,"message":"28","line":77,"column":31,"nodeType":"26","messageId":"27","endLine":77,"endColumn":33},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]